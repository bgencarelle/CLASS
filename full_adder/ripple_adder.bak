library ieee;
use ieee.std_logic_1164.all;

entity ripple_adder is
 port (a, b, : in bit_vector(3 downto 0);
 s_out: out bit_vector(3 downto 0); 
 c_out: bit);
end ripple_adder;
architecture struc_dataflow_add of ripple_adder is
 component full_adder
 port(x, y, z: in std_logic;
 s, c : out std_logic);
 end component;
 signal F0_C, F1_C, F2_C, F3_C<<: std_logic;
 FOR FA0,FA1,FA2,FA3: full_adder USE ENTITY work.full_adder(dataflow_add);
 begin
 FA0: full_adder
 port map (x, y, z, s,c, a(0),b(0),0,s_out(0),F0_C);
 FA1: full_adder
 port map (x, y, z, s,c, a(1),b(1),F0_C,s_out(1),F1_C);
 FA2: full_adder
 port map (x, y, z, s,c, a(1),b(1),F0_C,s_out(2),F2_C);
 FA3: full_adder
 port map (x, y, z, s,c, a(1),b(1),F0_C,s_out(3),);
 c <= tc or hc;

end struc_dataflow_add; 